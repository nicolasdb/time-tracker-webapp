-- RFID Events Table for Time Tracker Project
-- This table stores all RFID tag events (insertions and removals)

-- Create rfid_events table
CREATE TABLE rfid_events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp TIMESTAMPTZ NOT NULL,
    event_type TEXT NOT NULL CHECK (event_type IN ('tag_insert', 'tag_removed')),
    tag_present BOOLEAN NOT NULL,
    tag_id TEXT NOT NULL,
    tag_type TEXT,
    wifi_status TEXT,
    time_status TEXT,
    device_id TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create indexes
CREATE INDEX idx_rfid_events_timestamp ON rfid_events(timestamp);
CREATE INDEX idx_rfid_events_tag_id ON rfid_events(tag_id);
CREATE INDEX idx_rfid_events_event_type ON rfid_events(event_type);
CREATE INDEX idx_rfid_events_device_id ON rfid_events(device_id);

-- Enable Row Level Security (RLS)
ALTER TABLE rfid_events ENABLE ROW LEVEL SECURITY;

-- Create policy to allow inserts from webhook
CREATE POLICY "Enable insert for webhooks" ON rfid_events
    FOR INSERT
    TO authenticated
    WITH CHECK (true);

-- Create policy to allow read access
CREATE POLICY "Enable read access for authenticated users" ON rfid_events
    FOR SELECT
    TO authenticated
    USING (true);

-- Function to automatically update updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Trigger to call the function
CREATE TRIGGER update_rfid_events_updated_at
    BEFORE UPDATE ON rfid_events
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Example insert that would work with our webhook payload
INSERT INTO rfid_events (
    timestamp,
    event_type,
    tag_present,
    tag_id,
    tag_type,
    wifi_status,
    time_status,
    device_id
) VALUES (
    '2024-02-24 12:53:04+01',  -- From payload timestamp
    'tag_insert',              -- From payload event_type
    true,                      -- From payload tag_present
    'dd 54 2a 83',            -- From payload tag_id
    'Mifare Classic (4-byte)', -- From payload tag_type
    'Connected to WiFi-2.4-6B2E (-49 dBm)', -- From payload wifi_status
    'Synced with NTP',        -- From payload time_status
    'NFC_ABC123'              -- From payload device_id
);
